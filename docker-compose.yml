version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - rag-network
    environment:
      - REACT_APP_API_URL=http://localhost:8000

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/rag_system
      - MONGODB_DB_NAME=rag_system
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - PINECONE_API_KEY=${PINECONE_API_KEY}
      - LLM_PROVIDER=${LLM_PROVIDER:-gemini}
      - EMBEDDING_PROVIDER=${EMBEDDING_PROVIDER:-huggingface}
      - VECTORDB_PROVIDER=${VECTORDB_PROVIDER:-chroma}
      - CHUNK_SIZE=${CHUNK_SIZE:-1000}
      - CHUNK_OVERLAP=${CHUNK_OVERLAP:-200}
    depends_on:
      - mongodb
    volumes:
      - ./backend/temp_uploads:/app/temp_uploads
      - chroma_data:/app/chroma_db
    networks:
      - rag-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - rag-network
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  rag-network:
    driver: bridge

volumes:
  mongodb_data:
  chroma_data: